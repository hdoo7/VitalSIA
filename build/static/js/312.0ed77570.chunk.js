"use strict";(self.webpackChunkEVA_libre=self.webpackChunkEVA_libre||[]).push([[312],{42026:(e,t,s)=>{s.d(t,{A:()=>n});class n{constructor(){this.recognition=null,this.isListening=!1}initializeRecognizer(){return"webkitSpeechRecognition"in window?(this.recognition=new window.webkitSpeechRecognition,this.recognition.continuous=!0,this.recognition.interimResults=!1,this.recognition.lang="en-US",Promise.resolve()):(console.error("Web Speech API not supported in this browser."),Promise.reject("Web Speech API not supported"))}startContinuousRecognition(e){if(!this.isListening)return new Promise(((t,s)=>{this.initializeRecognizer().then((()=>{this.recognition.onresult=t=>{const s=Array.from(t.results).map((e=>e[0].transcript)).join("");console.log("RECOGNIZED: ".concat(s.trim())),e(s.trim())},this.recognition.onerror=e=>{console.error("Speech recognition error:",e.error),"no-speech"===e.error?(console.warn("No speech detected, resuming listening..."),setTimeout((()=>{this.recognition.start()}),1e3)):s(e.error)},this.recognition.onend=()=>{console.log("Speech recognition ended, restarting..."),this.isListening&&this.recognition.start()},this.isListening=!0,this.recognition.start(),t()})).catch((e=>{console.error("Error initializing speech recognition:",e),s(e)}))}));console.warn("Recognition is already running.")}stopRecognition(){this.recognition&&(this.isListening=!1,this.recognition.stop(),console.log("Recognition stopped."))}}},49312:(e,t,s)=>{s.r(t),s.d(t,{start:()=>I,stop:()=>j});var n=s(84391),i=s(65043),o=s(93748),r=s(42026);class c{constructor(e){if(Array.isArray(e))this.phrases=e.join(" ");else{if("string"!==typeof e)throw new Error("Phrases must be either a string or an array of strings");this.phrases=e}this.lastDetectedPhrase=null}listen(e){return new Promise((t=>{const s=this.detectTriggerPhrase(e);s?(this.lastDetectedPhrase=s,t(s)):t(null)}))}detectTriggerPhrase(e){return this.phrases.includes(e.toLowerCase())?e:null}}class l extends c{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3,s=arguments.length>2?arguments[2]:void 0;super(e),this.awaitingFollowUp=!1,this.lastDetectedPhrase=null,this.audioToText=s,this.debounceTimer=null,this.bufferTime=t}startListening(e){this.audioToText.startContinuousRecognition(e)}stopListening(){this.audioToText.stopRecognition()}listenForStream(e){return new Promise((t=>{this.awaitingFollowUp?(this.awaitingFollowUp=!1,t({phrase:this.lastDetectedPhrase,followUp:e}),this.lastDetectedPhrase=null):super.listen(e).then((e=>{e?(this.awaitingFollowUp=!0,this.lastDetectedPhrase=e,t({phrase:e,followUp:null})):t(null)}))}))}resumeListeningAfterResponse(e,t){setTimeout((()=>{e("listening"),this.startListening(t)}),this.bufferTime)}processUtterance(e){const t=[];let s="";return e.split(" ").forEach((e=>{s.length+e.length+1>120?(t.push(s),s=e):s+=(0===s.length?"":" ")+e})),s.length>0&&t.push(s),t}}const a=class{constructor(e){if(!e||"string"!==typeof e)throw new Error("A valid OpenAI API key must be provided.");this.apiKey=e,this.apiUrl="https://api.openai.com/v1/chat/completions"}async processText(e){const t={model:"gpt-3.5-turbo",messages:[{role:"system",content:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Answer in a professional manner:"},{role:"user",content:e}],max_tokens:150,temperature:.7};try{var s,n,i,o;const e=await fetch(this.apiUrl,{method:"POST",headers:{Authorization:"Bearer ".concat(this.apiKey),"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw new Error("API request failed with status: ".concat(e.status));const r=null===(s=(await e.json()).choices)||void 0===s||null===(n=s[0])||void 0===n||null===(i=n.message)||void 0===i||null===(o=i.content)||void 0===o?void 0:o.trim();if(!r)throw new Error("Failed to get a valid response from the API");return r}catch(r){throw console.error("Error processing text with GPT:",r),r}}};var h=s(96308),g=s(85522),u=s(53768),p=s(10157),d=s(13204),w=s(70579);const f=e=>{let{status:t}=e;return(0,w.jsx)(g.az,{position:"fixed",zIndex:"1000",bottom:"20px",left:"20px",bg:"gray.700",borderRadius:"md",p:4,boxShadow:"xl",userSelect:"none",children:(0,w.jsxs)(g.az,{display:"flex",flexDirection:"column",alignItems:"center",children:[(0,w.jsx)(u.I,{as:d.Qp1,color:{talking:"red.500",listening:"green.500",idle:"yellow.500"}[t],boxSize:6,mb:2}),(0,w.jsxs)(p.E,{color:"white",fontWeight:"bold",children:["talking"===t&&"Talking","listening"===t&&"Listening","idle"===t&&"Idle"]})]})})};let m,T,x,b,A=!1,y=!1,P="",R=null;const v=2e3,L=e=>{const t=[];let s="";return e.split(" ").forEach((e=>{s.length+e.length+1>120?(t.push(s),s=e):s+=(0===s.length?"":" ")+e})),s.length>0&&t.push(s),t},E=(e,t,s)=>{(e=>P&&e.includes(P))(e)?console.log("Ignoring agent\u2019s own speech."):(console.log("Transcribed text: ".concat(e)),s({title:"Transcribed text",description:e,status:"info",duration:2e3}),A?k(e,t,s):S(e,t,s))},S=(e,t,s)=>{A=!0,P="Let me check that for you...",y=!0,T.stopListening(),b.enqueueText(P),t("talking"),s({title:"Trigger Detected",description:'You said: "'.concat(e,'". Processing...'),status:"success",duration:3e3}),x.processText(e,"Answer seriously:").then((e=>{if(e){L(e).forEach((e=>{b.enqueueText(e)})),P=e}t("idle"),y=!1,setTimeout((()=>{console.log("Resuming listening after trigger response..."),T.resumeListeningAfterResponse(t,(e=>E(e,t,s)))}),v)})).catch((e=>{console.error("Error processing trigger phrase:",e),T.resumeListeningAfterResponse(t,(e=>E(e,t,s)))}))},k=(e,t,s)=>{y=!0,T.stopListening(),x.processText(e,"Answer seriously:").then((e=>{if(e){L(e).forEach((e=>{b.enqueueText(e)})),P=e}t("idle"),y=!1,setTimeout((()=>{console.log("Resuming listening after follow-up..."),T.resumeListeningAfterResponse(t,(e=>E(e,t,s)))}),v)})).catch((e=>{console.error("Error processing follow-up:",e),T.resumeListeningAfterResponse(t,(e=>E(e,t,s)))}))},I=(e,t,s)=>{if(!s||!s.current)return void console.error("Invalid container reference");((e,t)=>{const s=t.triggerPhrases||[],n=t.apiKey;m=new r.A("webspeech"),T=new l(s,v,m),x=new a(n),b=h.A.getInstance(e);const i=b.getVoices().find((e=>e.name.includes("Tessa")));i?(b.setVoice(i.name),console.log("Voice set to Tessa.")):console.warn("Tessa voice not found, using default.")})(e,t);const c=()=>{const[e,t]=(0,i.useState)("idle"),s=(0,o.d)();return(0,i.useEffect)((()=>(T.startListening((e=>E(e,t,s))),()=>{m.stopRecognition()})),[t,s]),(0,w.jsx)(f,{status:e})};R||(R=n.createRoot(s.current)),R.render((0,w.jsx)(c,{}))},j=()=>{m&&m.stopRecognition(),b&&b.stopSpeech(),R&&(R.unmount(),R=null)}}}]);
//# sourceMappingURL=312.0ed77570.chunk.js.map