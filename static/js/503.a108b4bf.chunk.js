"use strict";(self.webpackChunkEVA_libre=self.webpackChunkEVA_libre||[]).push([[503],{42026:(e,t,n)=>{n.d(t,{A:()=>o});class o{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"webspeech";this.recognition=null,this.isRecognizing=!1,this.isManuallyStopped=!1,this.initRecognition(e)}initRecognition(e){"webspeech"===e?(this.recognition=new(window.SpeechRecognition||window.webkitSpeechRecognition),this.recognition.interimResults=!1,this.recognition.continuous=!0,this.recognition.lang="en-US"):console.error("Unsupported recognition type")}startContinuousRecognition(e){this.isRecognizing?(this.recognition.onend=()=>{this.isRecognizing=!1,this.startRecognitionProcess(e)},this.stopRecognition()):(this.isManuallyStopped=!1,this.startRecognitionProcess(e))}startRecognitionProcess(e){if(this.isRecognizing)return void console.warn("Recognition is already running, skipping start.");this.isRecognizing=!0;const t=[];this.recognition.onresult=n=>{const o=n.results;for(let e=n.resultIndex;e<o.length;e++)o[e].isFinal&&t.push(o[e][0].transcript.trim());e(t.join(" "))},this.recognition.onerror=t=>{"not-allowed"===t.error?(console.error("Recognition error: Microphone access was not allowed."),alert("Please allow microphone access to use the speech recognition feature."),this.stopRecognition()):"no-speech"===t.error?(console.warn("Recognition error: No speech detected."),this.isManuallyStopped||setTimeout((()=>{console.log("Restarting speech recognition after no-speech error..."),this.startRecognitionProcess(e)}),1e3)):(console.error("Recognition error:",t.error),this.stopRecognition())},this.recognition.onend=()=>{console.log("Speech recognition ended."),this.isRecognizing=!1,this.isManuallyStopped||(console.log("Restarting speech recognition..."),this.startRecognitionProcess(e))},this.recognition.start(),console.log("Speech recognition started.")}stopRecognition(){this.isRecognizing&&(this.isManuallyStopped=!0,this.recognition.stop(),console.log("Speech recognition stopped manually."),this.isRecognizing=!1)}}},34003:(e,t,n)=>{n.d(t,{A:()=>a});var o=n(85522),s=n(53768),i=n(10157),r=n(13204),c=n(70579);const a=e=>{let{status:t}=e;return(0,c.jsx)(o.az,{position:"fixed",zIndex:"1000",bottom:"20px",left:"20px",bg:"gray.700",borderRadius:"md",p:4,boxShadow:"xl",userSelect:"none",children:(0,c.jsxs)(o.az,{display:"flex",flexDirection:"column",alignItems:"center",children:[(0,c.jsx)(s.I,{as:r.Qp1,color:{talking:"red.500",listening:"green.500",idle:"yellow.500"}[t],boxSize:6,mb:2}),(0,c.jsxs)(i.E,{color:"white",fontWeight:"bold",children:["talking"===t&&"Talking","listening"===t&&"Listening","idle"===t&&"Idle"]})]})})}},53409:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(65043);const s=(e,t,n,s,i)=>{const[r,c]=(0,o.useState)({status:"idle",transcribedText:null,speakingText:null}),a=(0,o.useRef)(i()).current,l=(0,o.useRef)(s()).current,g=(0,o.useCallback)((async e=>{e&&""!==e.trim()?(c((t=>({...t,status:"talking",speakingText:e}))),await t.enqueueText(e),c((e=>({...e,status:"listening",speakingText:null}))),p()):c((e=>({...e,status:"listening",speakingText:null})))}),[t]),u=(0,o.useCallback)((e=>{c((t=>({...t,status:"thinking",transcribedText:e})));const{value:t}=a.next(e);t&&g(t).then((()=>{const{value:e}=l.next();e?g(e):c((e=>({...e,status:"idle",speakingText:null})))}))}),[g,a,l]),p=(0,o.useCallback)((()=>{c((e=>({...e,status:"listening"}))),e.startContinuousRecognition((e=>{u(e)}))}),[e,u]);return{conversationState:r,startConversation:(0,o.useCallback)((async()=>{const{value:e}=l.next();c((t=>({...t,status:"talking",speakingText:e}))),await t.enqueueText(e),c((e=>({...e,status:"listening",speakingText:null}))),p()}),[t,p,l]),stopConversation:(0,o.useCallback)((()=>{e.stopRecognition(),t.stopSpeech(),c({status:"idle",transcribedText:null,speakingText:null})}),[e,t])}}},29503:(e,t,n)=>{n.r(t),n.d(t,{start:()=>w,stop:()=>x});var o=n(84391),s=n(65043),i=n(93748),r=n(42026),c=n(96308),a=n(34003),l=n(53409);const g=class{constructor(e){if(!e||"string"!==typeof e)throw new Error("A valid OpenAI API key must be provided.");this.apiKey=e,this.apiUrl="https://api.openai.com/v1/chat/completions"}async processText(e){const t={model:"gpt-3.5-turbo",messages:[{role:"system",content:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Answer in a professional manner:"},{role:"user",content:e}],max_tokens:20,temperature:.88};try{var n,o,s,i;const e=await fetch(this.apiUrl,{method:"POST",headers:{Authorization:"Bearer ".concat(this.apiKey),"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw new Error("API request failed with status: ".concat(e.status));const r=null===(n=(await e.json()).choices)||void 0===n||null===(o=n[0])||void 0===o||null===(s=o.message)||void 0===s||null===(i=s.content)||void 0===i?void 0:i.trim();if(!r)throw new Error("Failed to get a valid response from the API");return r}catch(r){throw console.error("Error processing text with GPT:",r),r}}};var u=n(70579);let p,h,d,R=null;const w=async(e,t,n)=>{if(!n||!n.current)return void console.error("Invalid container reference");await(async(e,t)=>{const{apiKey:n,preferredVoice:o}=t;h=new r.A("webspeech"),p=c.A.getInstance(e),d=new g(n),await p.findAndSetVoice(o||"Bubbles")})(e,t);const w=()=>{const{conversationState:e,startConversation:t,stopConversation:n}=(0,l.A)(h,p,d),o=(0,i.d)();return(0,s.useEffect)((()=>(t(),()=>n())),[t,n]),(0,s.useEffect)((()=>{"thinking"===e.status?o({title:"Processing...",description:"Processing your response...",status:"info",duration:2e3}):"talking"===e.status&&o({title:"Response",description:e.gptResponse,status:"success",duration:4e3})}),[e.status,e.gptResponse,o]),(0,u.jsx)(a.A,{status:e.status})};R||(R=o.createRoot(n.current)),R.render((0,u.jsx)(w,{}))},x=()=>{h&&h.stopRecognition(),p&&p.stopSpeech(),R&&(R.unmount(),R=null)}}}]);
//# sourceMappingURL=503.a108b4bf.chunk.js.map